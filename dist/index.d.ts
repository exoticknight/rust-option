import a = require('./IOption');
export import Option = a.Option;
import b = require('./IResult');
export import Result = b.Result;
import { Result } from './IResult';
import { Option } from './IOption';
export declare function Some<T>(value: T): Option<T>;
export declare const None: Option<any>;
export declare function Ok<T>(value: T): Result<T, any>;
export declare function Err<E>(error: E): Result<any, E>;
export declare function makeMatch<T>(branches: (((x: Option<T>) => any) | [Option<any>, (x?: Option<T>) => any])[], deep?: boolean): (opt: Option<T>) => any;
export declare function match<T>(opt: Option<T>, branches: (((x: Option<T>) => any) | [Option<any>, (x?: Option<T>) => any])[], deep?: boolean): any;
